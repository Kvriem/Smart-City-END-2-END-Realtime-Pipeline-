version: '3.8'
services:
  # PostgreSQL database for Airflow metadata
  postgres-airflow:
    image: postgres:13
    container_name: postgres-airflow
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_airflow_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always
    networks:
      - analytics-network

  # Airflow Webserver
  airflow-webserver:
    image: apache/airflow:2.7.0-python3.10
    container_name: airflow-webserver
    command: >
      bash -c "pip install apache-airflow-providers-amazon apache-airflow-providers-snowflake &&
               airflow db init &&
               airflow users create --username airflow --firstname Admin --lastname User --role Admin --email admin@example.com --password airflow &&
               airflow webserver"
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres-airflow:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: 'UKMzEm3yIuFYEq1y3-2DEjJTzJkQV2_qMCOzNO_1nLs='
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
      AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: 'true'
      # AWS credentials for S3 access
      AWS_ACCESS_KEY_ID: "AKIAYPZAWIVEDC37UOPJ"
      AWS_SECRET_ACCESS_KEY: "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"
      AWS_DEFAULT_REGION: "us-east-1"
      # Snowflake credentials
      SNOWFLAKE_ACCOUNT: "gqfxmvd-rv08501"
      SNOWFLAKE_USER: "kariemmoniem"
      SNOWFLAKE_PASSWORD: "349943Kariem++"
      SNOWFLAKE_DATABASE: "SMART_CITY_DW"
      SNOWFLAKE_SCHEMA: "RAW_DATA"
      SNOWFLAKE_WAREHOUSE: "COMPUTE_WH"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/config:/opt/airflow/config
      - ./airflow/plugins:/opt/airflow/plugins
    ports:
      - "8080:8080"
    depends_on:
      postgres-airflow:
        condition: service_healthy
    restart: always
    networks:
      - analytics-network

  # Airflow Scheduler
  airflow-scheduler:
    image: apache/airflow:2.7.0-python3.10
    container_name: airflow-scheduler
    command: >
      bash -c "pip install apache-airflow-providers-amazon apache-airflow-providers-snowflake &&
               airflow scheduler"
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres-airflow:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: 'UKMzEm3yIuFYEq1y3-2DEjJTzJkQV2_qMCOzNO_1nLs='
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: 'true'
      # AWS credentials for S3 access
      AWS_ACCESS_KEY_ID: "AKIAYPZAWIVEDC37UOPJ"
      AWS_SECRET_ACCESS_KEY: "o2sr4OfuJV7amz/7xG/3lodSlY09euYJH6kVRaIZ"
      AWS_DEFAULT_REGION: "us-east-1"
      # Snowflake credentials
      SNOWFLAKE_ACCOUNT: "gqfxmvd-rv08501"
      SNOWFLAKE_USER: "kariemmoniem"
      SNOWFLAKE_PASSWORD: "349943Kariem++"
      SNOWFLAKE_DATABASE: "SMART_CITY_DW"
      SNOWFLAKE_SCHEMA: "RAW_DATA"
      SNOWFLAKE_WAREHOUSE: "COMPUTE_WH"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/config:/opt/airflow/config
      - ./airflow/plugins:/opt/airflow/plugins
    depends_on:
      postgres-airflow:
        condition: service_healthy
      airflow-webserver:
        condition: service_started
    restart: always
    networks:
      - analytics-network

volumes:
  postgres_airflow_data:

networks:
  analytics-network:
    driver: bridge